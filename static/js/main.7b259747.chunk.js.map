{"version":3,"sources":["components/mouse.js","containers/with-mouse.js","containers/mouse-tracker.js","hooks/use-mouse.js","components/app.js","index.js"],"names":["Mouse","x","y","withMouse","Component","state","toggler","Subject","this","clicks","fromEvent","window","subscribe","next","tracker","pipe","map","clientX","clientY","takeUntil","repeatWhen","pos","setState","unsubscribe","React","MouseTracker","BehaviorSubject","getValue","mousePositions","switchMap","isTracking","EMPTY","props","render","useMouse","useState","setPos","useEffect","MouseHOC","App","ReactDOM","document","getElementById"],"mappings":"uNAQeA,EAND,SAAC,GAAD,IAAGC,EAAH,EAAGA,EAAGC,EAAN,EAAMA,EAAN,OACZ,iDACoBD,EADpB,MAC0BC,I,gFCkCbC,EAlCG,SAAAC,GAAS,mBAEvB,aAAe,IAAD,8BACZ,+CACKC,MAAQ,CACXJ,EAAG,EACHC,EAAG,GAJO,EAFS,iFAUF,IAAD,OACZI,EAAU,IAAIC,IAEpBC,KAAKC,OAASC,YAAUC,OAAQ,SAASC,WAAU,kBAAMN,EAAQO,UAEjEL,KAAKM,QAAUJ,YAAUC,OAAQ,aAC9BI,KACCC,aAAI,kBAAiC,CAAEf,EAAnC,EAAGgB,QAAmCf,EAAtC,EAAegB,YACnBC,YAAUb,GACVc,aAAW,kBAAMd,MAElBM,WAAU,SAAAS,GAAG,OAAI,EAAKC,SAASD,QArBb,6CAyBrBb,KAAKC,OAAOc,cACZf,KAAKM,QAAQS,gBA1BQ,+BA8BrB,OAAO,kBAACnB,EAAcI,KAAKH,WA9BN,GACFmB,IAAMpB,Y,wBCkChBqB,E,YAlCb,aAAe,IAAD,8BACZ,+CACKpB,MAAQ,CACXJ,EAAG,EACHC,EAAG,GAJO,E,iFAQO,IAAD,OACZI,EAAU,IAAIoB,KAAgB,GAEpClB,KAAKC,OAASC,YAAUC,OAAQ,SAASC,WAAU,kBACjDN,EAAQO,MAAMP,EAAQqB,eAGxB,IAAMC,EAAiBlB,YAAUC,OAAQ,aAAaI,KACpDC,aAAI,kBAAiC,CAAEf,EAAnC,EAAGgB,QAAmCf,EAAtC,EAAegB,aAGrBV,KAAKM,QAAUR,EACZS,KAAKc,aAAU,SAAAC,GAAU,OAAKA,EAAaF,EAAiBG,QAC5DnB,WAAU,SAAAS,GAAG,OAAI,EAAKC,SAASD,Q,6CAIlCb,KAAKC,OAAOc,cACZf,KAAKM,QAAQS,gB,+BAIb,OAAOf,KAAKwB,MAAMC,OAAOzB,KAAKH,W,GA/BPD,a,QC4BZ8B,EA5BE,WAAO,IAAD,EACCC,mBAAS,CAC7BlC,EAAG,EACHC,EAAG,IAHgB,mBACdmB,EADc,KACTe,EADS,KAyBrB,OAnBAC,qBAAU,WACR,IAAM/B,EAAU,IAAIC,IAEdE,EAASC,YAAUC,OAAQ,SAASC,WAAU,kBAAMN,EAAQO,UAE5DC,EAAUJ,YAAUC,OAAQ,aAC/BI,KACCC,aAAI,kBAAiC,CAAEf,EAAnC,EAAGgB,QAAmCf,EAAtC,EAAegB,YACnBC,YAAUb,GACVc,aAAW,kBAAMd,MAElBM,WAAU,SAAAS,GAAG,OAAIe,EAAOf,MAE3B,OAAO,WACLZ,EAAOc,cACPT,EAAQS,iBAET,IAEIF,GCvBHiB,EAAWnC,EAAUH,GAeZuC,EAbH,WACV,IAAMlB,EAAMa,IAEZ,OACE,oCACE,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAcD,OAAQjC,IACtB,kBAAC,EAAUqB,GACX,wDCZNmB,IAASP,OAAO,kBAAC,EAAD,MAASQ,SAASC,eAAe,W","file":"static/js/main.7b259747.chunk.js","sourcesContent":["import React from 'react';\n\nconst Mouse = ({ x, y }) => (\n  <div>\n    My mouse is at X:{x} Y:{y}\n  </div>\n);\n\nexport default Mouse;\n","import React from 'react';\r\nimport { fromEvent, Subject } from 'rxjs';\r\nimport { map, takeUntil, repeatWhen } from 'rxjs/operators';\r\n\r\nconst withMouse = Component =>\r\n  class MouseHOC extends React.Component {\r\n    constructor() {\r\n      super();\r\n      this.state = {\r\n        x: 0,\r\n        y: 0,\r\n      };\r\n    }\r\n\r\n    componentDidMount() {\r\n      const toggler = new Subject();\r\n\r\n      this.clicks = fromEvent(window, 'click').subscribe(() => toggler.next());\r\n\r\n      this.tracker = fromEvent(window, 'mousemove')\r\n        .pipe(\r\n          map(({ clientX: x, clientY: y }) => ({ x, y })),\r\n          takeUntil(toggler),\r\n          repeatWhen(() => toggler),\r\n        )\r\n        .subscribe(pos => this.setState(pos));\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      this.clicks.unsubscribe();\r\n      this.tracker.unsubscribe();\r\n    }\r\n\r\n    render() {\r\n      return <Component {...this.state} />;\r\n    }\r\n  };\r\n\r\nexport default withMouse;\r\n","import { Component } from 'react';\r\nimport { fromEvent, BehaviorSubject, EMPTY } from 'rxjs';\r\nimport { map, switchMap } from 'rxjs/operators';\r\n\r\nclass MouseTracker extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      x: 0,\r\n      y: 0,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const toggler = new BehaviorSubject(true);\r\n\r\n    this.clicks = fromEvent(window, 'click').subscribe(() =>\r\n      toggler.next(!toggler.getValue()),\r\n    );\r\n\r\n    const mousePositions = fromEvent(window, 'mousemove').pipe(\r\n      map(({ clientX: x, clientY: y }) => ({ x, y })),\r\n    );\r\n\r\n    this.tracker = toggler\r\n      .pipe(switchMap(isTracking => (isTracking ? mousePositions : EMPTY)))\r\n      .subscribe(pos => this.setState(pos));\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.clicks.unsubscribe();\r\n    this.tracker.unsubscribe();\r\n  }\r\n\r\n  render() {\r\n    return this.props.render(this.state);\r\n  }\r\n}\r\n\r\nexport default MouseTracker;\r\n","import { useState, useEffect } from 'react';\r\nimport { fromEvent, Subject } from 'rxjs';\r\nimport { map, takeUntil, repeatWhen } from 'rxjs/operators';\r\n\r\nconst useMouse = () => {\r\n  const [pos, setPos] = useState({\r\n    x: 0,\r\n    y: 0,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const toggler = new Subject();\r\n\r\n    const clicks = fromEvent(window, 'click').subscribe(() => toggler.next());\r\n\r\n    const tracker = fromEvent(window, 'mousemove')\r\n      .pipe(\r\n        map(({ clientX: x, clientY: y }) => ({ x, y })),\r\n        takeUntil(toggler),\r\n        repeatWhen(() => toggler),\r\n      )\r\n      .subscribe(pos => setPos(pos));\r\n\r\n    return () => {\r\n      clicks.unsubscribe();\r\n      tracker.unsubscribe();\r\n    };\r\n  }, []);\r\n\r\n  return pos;\r\n};\r\n\r\nexport default useMouse;\r\n","import React from 'react';\r\nimport Mouse from 'components/mouse';\r\nimport withMouse from 'containers/with-mouse';\r\nimport MouseTracker from 'containers/mouse-tracker';\r\nimport useMouse from 'hooks/use-mouse';\r\n\r\nconst MouseHOC = withMouse(Mouse);\r\n\r\nconst App = () => {\r\n  const pos = useMouse();\r\n\r\n  return (\r\n    <>\r\n      <MouseHOC />\r\n      <MouseTracker render={Mouse} />\r\n      <Mouse {...pos} />\r\n      <p>Click anywhere to pause</p>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/app';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}
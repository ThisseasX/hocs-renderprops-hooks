{"version":3,"sources":["components/mouse.js","containers/with-mouse.js","containers/mouse-tracker.js","hooks/use-mouse.js","components/app.js","index.js"],"names":["Mouse","x","y","withMouse","Component","state","toggle","Subject","this","clicks","fromEvent","window","subscribe","next","tracker","pipe","map","clientX","clientY","takeUntil","repeatWhen","pos","setState","unsubscribe","React","MouseTracker","props","render","useMouse","useState","setPos","useEffect","MouseHOC","App","ReactDOM","document","getElementById"],"mappings":"uNAQeA,EAND,SAAC,GAAD,IAAGC,EAAH,EAAGA,EAAGC,EAAN,EAAMA,EAAN,OACZ,iDACoBD,EADpB,MAC0BC,I,gFCkCbC,EAlCG,SAAAC,GAAS,mBAEvB,aAAe,IAAD,8BACZ,+CACKC,MAAQ,CACXJ,EAAG,EACHC,EAAG,GAJO,EAFS,iFAUF,IAAD,OACZI,EAAS,IAAIC,IAEnBC,KAAKC,OAASC,YAAUC,OAAQ,SAASC,WAAU,kBAAMN,EAAOO,UAEhEL,KAAKM,QAAUJ,YAAUC,OAAQ,aAC9BI,KACCC,aAAI,kBAAiC,CAAEf,EAAnC,EAAGgB,QAAmCf,EAAtC,EAAegB,YACnBC,YAAUb,GACVc,aAAW,kBAAMd,MAElBM,WAAU,SAAAS,GAAG,OAAI,EAAKC,SAASD,QArBb,6CAyBrBb,KAAKC,OAAOc,cACZf,KAAKM,QAAQS,gBA1BQ,+BA8BrB,OAAO,kBAACnB,EAAcI,KAAKH,WA9BN,GACFmB,IAAMpB,YCgChBqB,E,YAhCb,aAAe,IAAD,8BACZ,+CACKpB,MAAQ,CACXJ,EAAG,EACHC,EAAG,GAJO,E,iFAQO,IAAD,OACZI,EAAS,IAAIC,IAEnBC,KAAKC,OAASC,YAAUC,OAAQ,SAASC,WAAU,kBAAMN,EAAOO,UAEhEL,KAAKM,QAAUJ,YAAUC,OAAQ,aAC9BI,KACCC,aAAI,kBAAiC,CAAEf,EAAnC,EAAGgB,QAAmCf,EAAtC,EAAegB,YACnBC,YAAUb,GACVc,aAAW,kBAAMd,MAElBM,WAAU,SAAAS,GAAG,OAAI,EAAKC,SAASD,Q,6CAIlCb,KAAKC,OAAOc,cACZf,KAAKM,QAAQS,gB,+BAIb,OAAOf,KAAKkB,MAAMC,OAAOnB,KAAKH,W,GA7BPD,a,QC4BZwB,EA5BE,WAAO,IAAD,EACCC,mBAAS,CAC7B5B,EAAG,EACHC,EAAG,IAHgB,mBACdmB,EADc,KACTS,EADS,KAyBrB,OAnBAC,qBAAU,WACR,IAAMzB,EAAS,IAAIC,IAEbE,EAASC,YAAUC,OAAQ,SAASC,WAAU,kBAAMN,EAAOO,UAE3DC,EAAUJ,YAAUC,OAAQ,aAC/BI,KACCC,aAAI,kBAAiC,CAAEf,EAAnC,EAAGgB,QAAmCf,EAAtC,EAAegB,YACnBC,YAAUb,GACVc,aAAW,kBAAMd,MAElBM,WAAU,SAAAS,GAAG,OAAIS,EAAOT,MAE3B,OAAO,WACLZ,EAAOc,cACPT,EAAQS,iBAET,IAEIF,GCvBHW,EAAW7B,EAAUH,GAeZiC,EAbH,WACV,IAAMZ,EAAMO,IAEZ,OACE,oCACE,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAcD,OAAQ3B,IACtB,kBAAC,EAAUqB,GACX,wDCZNa,IAASP,OAAO,kBAAC,EAAD,MAASQ,SAASC,eAAe,W","file":"static/js/main.e176ed12.chunk.js","sourcesContent":["import React from 'react';\n\nconst Mouse = ({ x, y }) => (\n  <div>\n    My mouse is at X:{x} Y:{y}\n  </div>\n);\n\nexport default Mouse;\n","import React from 'react';\nimport { fromEvent, Subject } from 'rxjs';\nimport { map, takeUntil, repeatWhen } from 'rxjs/operators';\n\nconst withMouse = Component =>\n  class MouseHOC extends React.Component {\n    constructor() {\n      super();\n      this.state = {\n        x: 0,\n        y: 0,\n      };\n    }\n\n    componentDidMount() {\n      const toggle = new Subject();\n\n      this.clicks = fromEvent(window, 'click').subscribe(() => toggle.next());\n\n      this.tracker = fromEvent(window, 'mousemove')\n        .pipe(\n          map(({ clientX: x, clientY: y }) => ({ x, y })),\n          takeUntil(toggle),\n          repeatWhen(() => toggle),\n        )\n        .subscribe(pos => this.setState(pos));\n    }\n\n    componentWillUnmount() {\n      this.clicks.unsubscribe();\n      this.tracker.unsubscribe();\n    }\n\n    render() {\n      return <Component {...this.state} />;\n    }\n  };\n\nexport default withMouse;\n","import { Component } from 'react';\nimport { fromEvent, Subject } from 'rxjs';\nimport { map, takeUntil, repeatWhen } from 'rxjs/operators';\n\nclass MouseTracker extends Component {\n  constructor() {\n    super();\n    this.state = {\n      x: 0,\n      y: 0,\n    };\n  }\n\n  componentDidMount() {\n    const toggle = new Subject();\n\n    this.clicks = fromEvent(window, 'click').subscribe(() => toggle.next());\n\n    this.tracker = fromEvent(window, 'mousemove')\n      .pipe(\n        map(({ clientX: x, clientY: y }) => ({ x, y })),\n        takeUntil(toggle),\n        repeatWhen(() => toggle),\n      )\n      .subscribe(pos => this.setState(pos));\n  }\n\n  componentWillUnmount() {\n    this.clicks.unsubscribe();\n    this.tracker.unsubscribe();\n  }\n\n  render() {\n    return this.props.render(this.state);\n  }\n}\n\nexport default MouseTracker;\n","import { useState, useEffect } from 'react';\nimport { fromEvent, Subject } from 'rxjs';\nimport { map, takeUntil, repeatWhen } from 'rxjs/operators';\n\nconst useMouse = () => {\n  const [pos, setPos] = useState({\n    x: 0,\n    y: 0,\n  });\n\n  useEffect(() => {\n    const toggle = new Subject();\n\n    const clicks = fromEvent(window, 'click').subscribe(() => toggle.next());\n\n    const tracker = fromEvent(window, 'mousemove')\n      .pipe(\n        map(({ clientX: x, clientY: y }) => ({ x, y })),\n        takeUntil(toggle),\n        repeatWhen(() => toggle),\n      )\n      .subscribe(pos => setPos(pos));\n\n    return () => {\n      clicks.unsubscribe();\n      tracker.unsubscribe();\n    };\n  }, []);\n\n  return pos;\n};\n\nexport default useMouse;\n","import React from 'react';\nimport Mouse from 'components/mouse';\nimport withMouse from 'containers/with-mouse';\nimport MouseTracker from 'containers/mouse-tracker';\nimport useMouse from 'hooks/use-mouse';\n\nconst MouseHOC = withMouse(Mouse);\n\nconst App = () => {\n  const pos = useMouse();\n\n  return (\n    <>\n      <MouseHOC />\n      <MouseTracker render={Mouse} />\n      <Mouse {...pos} />\n      <p>Click anywhere to pause</p>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/app';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}